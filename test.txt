/** - DEBIT CARD **/

// Script-wide timeout for wait and waitAndFind functions (in ms)
var DefaultTimeout = 120000;
// Change to any User Agent you want to use.
// Leave as "default" or empty to use the Synthetics default.
var UserAgent = "INTERNAL_NRSYNTHETICS";

// this variable used for the log step number
var counter_value = 1;

/** HELPER VARIABLES AND FUNCTIONS **/

/** VARIABLES FOR Debit Cards **/
var website_address = "https://www.bankbazaar.com/debit-card.html?WT.mc_id=INTERNAL_TESTING_BB_NRSYNTHETIC";
var company_name = "MICROSOFT";
var monthly_salary_amount = 50000;

var DebitCardPageLoadTimeThreshold = 10000;
var DebitCardSlidePageLoadTimeThreshold = 10000;
var OfferPageLoadTimeThreshold = 10000;
var FinalURL = "https://www.bankbazaar.com/invalidate-session.html";


var assert = require('assert'),
  moment = require('moment'),
  By = $driver.By,
  browser = $browser.manage(),
  startTime = Date.now(),
  stepStartTime = Date.now(),
  lastMsg = '',
  VARS = {};

/**** Bankbazaar - Debit Card Page Obeject variables **************************/
var BB_DebitCardsLink = By.xpath ("//h2[contains(text(),'Compare Debit Card with other Banks')]");
var BB_Eligibility_City = By.xpath("//div[@slidename='city'][contains(@class,'active')]//label[@for='cityNameCHENNAI']");
var BB_Eligibility_CardPuposeSkipLink = By.xpath("//div[@slidename='purpose'][contains(@class,'active')]//a[@class='skip-slide']");
var BB_Eligibility_CompanyName = By.id("companyNameFieldSal");
var BB_Eligibility_WorkCompanyText = By.xpath("//h3[contains(text(),\'Company I work for\')]");
var BB_Eligibility_EmployerContinue = By.xpath("//div[@slidename='employer']//a[@id='continueButton']");
var BB_Eligibility_MonthlySalary = By.xpath("//div[@slidename='salary'][contains(@class,'active')]//input[@name='form.details.applicant.income.monthlyTakeHomeSalary']");
var BB_Eligibility_MonthlySalaryContinue = By.xpath("//div[@slidename='salary'][contains(@class,'active')]//a[@id='continueButton']");
var BB_Eligibility_DOBContinue = By.xpath("//div[@slidename='dob'][contains(@class,'active')]//a[@id='continueButton']");
var BB_Eligibility_Submit = By.xpath("//div[@slidename='contactme'][contains(@class,'active')]//input[@id='eForm_submit_button']");
var BB_Offer_Page = By.id("offer-table");
var BB_Offer_Page_Details = By.xpath("//section[@id='offer-table']//div[@class='offer-section-column col-same-height col-middle card']");

var start_timer = new Array();
var end_timer = new Array();

function start_transaction(transaction_Name)
{
	start_timer[transaction_Name] = Date.now();
}


function end_transaction(transaction_Name,timeout)
{
	end_timer[transaction_Name] = Date.now();
  diff = end_timer[transaction_Name]- start_timer[transaction_Name];
  if(diff>timeout)
  {
    	$util.insights.set("ERROR: " + transaction_Name  + "Page not loaded on given time(ms) : " + timeout,diff);
      throw("ERROR: " + transaction_Name  + "Page not loaded on Expected time(ms) : " + timeout + ". Actual page load time: " + diff);
  }
  else
    {
    	console.log("***************** " + transaction_Name  + " : Page loaded on time(ms) : " + diff + ", Maximum timeout(ms):" + timeout);
			$util.insights.set("***************** " + transaction_Name  + " : Page loaded on time(ms) : " + diff + ", Maximum timeout(ms):" + timeout,diff);
    }
}

var log = function( msg) {
  	ist_time = moment().utcOffset("+05:30");
  	curr_date = ist_time.format("DD MMM YYYY, HH:mm:ss");

   	console.log(curr_date + ' - Step ' + counter_value + ': ' + msg );
  	$util.insights.set('Step ' + counter_value + ': ' + msg,curr_date);
  counter_value++;
 };

function isAlertPresent() {
  try {
    var thisAlert = $browser.switchTo().alert();
    return true;
  } catch (err) { return false; }
}

function isElementSelected(el) { return $browser.findElement(el).isSelected(); }
function isTextPresentIn(text, sourceEl) {
  return sourceEl.getText()
  .then(function (wholetext) {
    return wholetext.indexOf(text) != -1;
  });
}

function isTextPresent(text) {
  return isTextPresentIn(text, $browser.findElement(By.tagName('html')));
}

function WaitForElementToVisible(ObjDesc)
{
  var result;
  return $browser.wait(
    function(){
     result= $driver.until.elementIsVisible($browser.findElement(ObjDesc ));
     $browser.sleep(500);
      return result;},DefaultTimeout); 
}

function WaitForElementNotVisible(ObjDesc)
{
  var result;
  return $browser.wait(
    function(){
      result =$driver.until.elementIsNotVisible($browser.findElement(ObjDesc));
      $browser.sleep(1000);   
      return result;},DefaultTimeout); 
}

function getElement(ObjDesc)
{
  	if(WaitForElementToVisible(ObjDesc))
    {
      return $browser.waitForAndFindElement(ObjDesc,DefaultTimeout);
    }
  
}

/** BEGINNING OF SCRIPT **/

// Setting User Agent is not then-able, so we do this first (if defined and not default)
if (UserAgent && (0 !== UserAgent.trim().length) && (UserAgent != 'default')) {
  $browser.addHeader('User-Agent', UserAgent);
  console.log('Setting User-Agent to ' + UserAgent);
}

// Get browser capabilities and do nothing with it, so that we start with a then-able command
$browser.getCapabilities().then(function () { })


// Step 1
.then(function() {
  log('open "'+ website_address + '" in the browser');
  start_transaction("debitcards_page");
  return $browser.get(website_address); 
})

// Step 2
.then(function(){
  return getElement(BB_DebitCardsLink);
}).then(function (el) {  
  end_transaction("debitcards_page",DebitCardPageLoadTimeThreshold);
  log('Select "Get Quote" in the "Debit Card Landing Page"');
  start_transaction("slide_starting_page");
  el.click(); })

// Step 3
.then(function() {
   return getElement(BB_Eligibility_City); })
.then(function (el) { 
  end_transaction("slide_starting_page",DebitCardSlidePageLoadTimeThreshold);
  log('Select "Chennai" in the "live Currently" Slide');
  el.click();
 })
 
// Step 4
.then(function() {
 log('Click "Skip" link in the "What sort of rewards make you smile?" Slide');
   return getElement(BB_Eligibility_CardPuposeSkipLink); })
.then(function (el) { el.click(); })

// Step 5
.then(function() {
  log('Enter a Company name in the "Company I Work for?" Slide textbox');
  return getElement(BB_Eligibility_CompanyName); })
.then(function (el) { el.sendKeys(company_name); })

// Step 6
.then(function() {
  log('Select the entered Company name in the "Company I Work for?" Slide');
  return getElement(BB_Eligibility_WorkCompanyText); })
.then(function (el) { el.click(); })

// Step 7
.then(function() {
 log('Click "Continue" button in the "Company I Work for?" Slide');
  return getElement(BB_Eligibility_EmployerContinue); })
.then(function (el) { 
//   el.click(); 
})

// Step 8
.then(function() {
 log('Enter the monthly salary in the "My net monthly salary is?" Slide textbox');
  return getElement(BB_Eligibility_MonthlySalary); })
.then(function (el) { el.sendKeys(monthly_salary_amount); })

// Step 9
.then(function() {
 log('Click "Press to continue" button in the "My net monthly salary is?" Slide');
  return getElement(BB_Eligibility_MonthlySalaryContinue); })
.then(function (el) { el.click(); })

// Step 12
.then(function() {
 log('Select the age from slider in the "Whats your Age?" Slide');
  return getElement(BB_Eligibility_DOBContinue); })
.then(function (el) { 
  $browser.executeScript("$('#date-of-birth').val('31 Jul 1987')");
	$browser.executeScript("$('#eForm_form_applicantPlaceHolder_dob_day').val(31)");
	$browser.executeScript("$('#eForm_form_applicantPlaceHolder_dob_month').val(7)");
	$browser.executeScript("$('#eForm_form_applicantPlaceHolder_dob_year').val(1987)");
  el.click(); })

// Step 13
.then(function() {
 log('Click "View Cards" button in the "Need to talk, Leave your Number" Slide');
  return getElement(BB_Eligibility_Submit); })
.then(function (el) { 
  start_transaction("offer_page");
  el.click(); })

// Step 14
.then(function() {
  log("Reached DC Offer page");
  return $browser.waitForAndFindElement(BB_Offer_Page, DefaultTimeout);
})
.then(function(){
  	end_transaction("offer_page",OfferPageLoadTimeThreshold); 
    
  	log("DC Offer page is loaded Successfully");
   return $browser.findElements(BB_Offer_Page_Details);
})
.then(function (el) { 
  								
									if(el.length>0)
                  {
                  	console.log("Offers count " + el.length);  
                  }
  								else
    							{
                    throw("ERROR: Offers not displayed");
                  }
           })

.then(function() {
  return $browser.getCurrentUrl(); })
.then(function(url){console.log(url.toString());})


.then(function() {
  $browser.navigate().to(FinalURL);
  console.log('Browser script execution SUCCEEDED.');
}, function(err) {
  $browser.navigate().to(FinalURL);
  console.log ('Browser script execution FAILED.');
  throw(err);
});

/** END OF SCRIPT **/
